# Generated by Django 3.1.1 on 2020-09-21 05:58

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cities', '0001_initial'),
        ('movies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Guid')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Category')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Row',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=3, null=True, unique=True, verbose_name='Row Name')),
            ],
            options={
                'verbose_name': 'Row',
                'verbose_name_plural': 'Rows',
            },
        ),
        migrations.CreateModel(
            name='Theater',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Guid')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Theater Name')),
                ('location', models.TextField(verbose_name='Address')),
                ('pin_code', models.CharField(max_length=6, verbose_name='Pin code')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='cities.city', verbose_name='City')),
            ],
            options={
                'verbose_name': 'Theater',
                'verbose_name_plural': 'Theaters',
            },
        ),
        migrations.CreateModel(
            name='TheaterScreen',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Guid')),
                ('name', models.CharField(max_length=6, verbose_name='Screen Name')),
                ('seats_arrangement', models.CharField(blank=True, choices=[('LTR', 'left to right'), ('RTL', 'right to left')], help_text='The order in which seats need to be arranged ', max_length=30, null=True, verbose_name='Seat Arrangement Direction')),
                ('max_seats', models.IntegerField(default=20, help_text='Max number of seats', verbose_name='Number of seats in a row')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movies', to='movies.movie', verbose_name='Movie')),
            ],
            options={
                'verbose_name': 'Theater Screen',
                'verbose_name_plural': 'Theater Screens',
            },
        ),
        migrations.CreateModel(
            name='TheaterScreenCategory',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Guid')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Ticket Price')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='theaters.category', verbose_name='Category')),
                ('last_row', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='theaters.row', verbose_name='Rows Up to')),
                ('screen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='theaters.theaterscreen', verbose_name='Screen')),
            ],
            options={
                'verbose_name': 'Theater Screen Category',
                'verbose_name_plural': 'Theater Screen Categories',
            },
        ),
        migrations.CreateModel(
            name='Timings',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Guid')),
                ('start', models.TimeField(verbose_name='Show Time')),
                ('end', models.TimeField(verbose_name='End Time')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
            ],
            options={
                'verbose_name': 'Show Timing',
                'verbose_name_plural': 'Show Timings',
                'unique_together': {('start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='TheaterScreenCategoryRowGap',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Guid')),
                ('seat', models.IntegerField(default=0, help_text='Provide seat no to place gaps after it', verbose_name='Seat No')),
                ('positions', models.IntegerField(default=0, verbose_name='Number of gaps')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gaps', to='theaters.theaterscreencategory', verbose_name='Category')),
                ('row', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='theaters.row', verbose_name='Row')),
            ],
            options={
                'verbose_name': 'Gap',
                'verbose_name_plural': 'Gaps',
            },
        ),
        migrations.AddField(
            model_name='theaterscreen',
            name='show_timings',
            field=models.ManyToManyField(blank=True, to='theaters.Timings', verbose_name='Show Timings'),
        ),
        migrations.AddField(
            model_name='theaterscreen',
            name='theater',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='screens', to='theaters.theater', verbose_name='Theater'),
        ),
        migrations.CreateModel(
            name='BookedTicket',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Guid')),
                ('seat', models.IntegerField(verbose_name='Seat No')),
                ('reserved_for', models.DateField(verbose_name='Reserved For')),
                ('booked_on', models.DateTimeField(auto_now_add=True, verbose_name='Booked On')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking', to='theaters.theaterscreencategory', verbose_name='Category')),
                ('row', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='theaters.row', verbose_name='Row')),
                ('show_time', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='theaters.timings', verbose_name='Show Time')),
            ],
            options={
                'verbose_name': 'Booked Ticket',
                'verbose_name_plural': 'Booked Tickets',
            },
        ),
    ]
